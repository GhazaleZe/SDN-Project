from mininet.topo import Topo

class Topology2( Topo ):
    def __init__( self ):
        # Initialize topology
        Topo.__init__( self )
        h1 = self.addHost('h1')
        h2 = self.addHost('h2')
        h3 = self.addHost('h3')
        h4 = self.addHost('h4')
        h5 = self.addHost('h5')
        h6 = self.addHost('h6')
        h7 = self.addHost('h7')
        h8 = self.addHost('h8')
        h9 = self.addHost('h9')
        h10 = self.addHost('h10')
        h11 = self.addHost('h11')
        # Add switches
        s1 = self.addSwitch('s1',protocols='OpenFlow13')
        s2 = self.addSwitch('s2',protocols='OpenFlow13')
        s3 = self.addSwitch('s3',protocols='OpenFlow13')
        s4 = self.addSwitch('s4',protocols='OpenFlow13')
        s5 = self.addSwitch('s5',protocols='OpenFlow13')
        s6 = self.addSwitch('s6',protocols='OpenFlow13')
        s7 = self.addSwitch('s7',protocols='OpenFlow13')
        s8 = self.addSwitch('s8',protocols='OpenFlow13')
        s9 = self.addSwitch('s9',protocols='OpenFlow13')
        s10 = self.addSwitch('s10',protocols='OpenFlow13')
        # Add links
        self.addLink(s1,s2)
        self.addLink(s1,s3)
        self.addLink(s1,s4)
        self.addLink(s2,s5)
        self.addLink(s3,s4)
        self.addLink(s4,s5)
        self.addLink(s3,s6)
        self.addLink(s6,s7)
        self.addLink(s4,s7)
        self.addLink(s7,s8)
        self.addLink(s6,s9)
        self.addLink(s7,s9)
        self.addLink(s2,s4)
        self.addLink(s7,s10)
        self.addLink(s10,s8)
        self.addLink(s8,s5)
        self.addLink(s9,s10)
        self.addLink(s2,s7)
        self.addLink(s7,s5)
        self.addLink(s4,s6)

        self.addLink(h1,s1)
        self.addLink(h2,s2)
        self.addLink(h3,s2)
        self.addLink(h9,s3)
        self.addLink(h10,s6)
        self.addLink(h4,s9)
        self.addLink(h5,s9)
        self.addLink(h6,s10)
        self.addLink(h8,s8)
        self.addLink(h7,s5)
        self.addLink(h11,s5)

topos = { 'mytopo': ( lambda: Topology2() )}
